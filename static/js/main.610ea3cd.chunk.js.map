{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","hasError","map","name","id","color","style","getAll","fetch","then","response","json","get5First","sort","a","b","localeCompare","slice","getRedGoods","filter","App","useState","setGoods","isLoading","setIsLoading","setHasError","getCallback","callBackFunc","goodsFromApi","handleGoods","promiseFunc","className","type","onClick","viewBox","r","cy","cx","ReactDOM","render","document","getElementById"],"mappings":"qPAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACxC,mCACIA,EACG,6DAED,6BACGD,EAAME,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAIC,EAAb,EAAaA,MAAb,OACT,oBAEE,UAAQ,OACRC,MAAO,CAAED,SAHX,SAKGF,GAJIC,W,OCXZ,SAASG,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,WACvB,OAAOL,IACJE,MAAK,SAAAT,GAAK,OACT,YAAIA,GAAOa,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEX,KAAKa,cAAcD,EAAEZ,SAC9Cc,MAAM,EAAG,OAILC,EAAc,WACzB,OAAOX,IACJE,MAAK,SAAAT,GAAK,OAAIA,EAAMmB,QAAO,kBAAyB,QAAzB,EAAGd,aCbtBe,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOrB,EAAP,KAAcsB,EAAd,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOpB,EAAP,KAAiBwB,EAAjB,KAEMC,EAAW,uCAAG,WAAOC,GAAP,eAAAb,EAAA,sEACSa,IADT,cACZC,EADY,yBAGXA,GAHW,2CAAH,sDAMXC,EAAW,uCAAG,WAAOC,GAAP,eAAAhB,EAAA,sEAEhBW,GAAY,GACZD,GAAa,GAHG,SAIWE,EAAYI,GAJvB,OAIVF,EAJU,OAMhBN,EAASM,GANO,gDAQhBH,GAAY,GARI,yBAUhBD,GAAa,GAVG,4EAAH,sDAcjB,OACE,sBAAKO,UAAU,MAAf,UACE,uDACA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMJ,EAAYtB,IAH7B,4BAQA,wBACEyB,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMJ,EAAYjB,IAH7B,gCAQA,wBACEoB,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMJ,EAAYX,IAH7B,4BAQCK,EAEG,qBAAKW,QAAQ,cAAb,SACE,wBAAQC,EAAE,KAAKC,GAAG,KAAKC,GAAG,SAG5B,cAAC,EAAD,CAAWrC,MAAOA,EAAOC,SAAUA,QC9D7CqC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.610ea3cd.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[],\n  hasError: boolean,\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods, hasError }) => (\n  <>\n    { hasError\n      ? (<p>Error, server is unavailable</p>)\n      : (\n        <ul>\n          {goods.map(({ name, id, color }) => (\n            <li\n              key={id}\n              data-cy=\"good\"\n              style={{ color }}\n            >\n              {name}\n            </li>\n          ))}\n        </ul>\n      )}\n  </>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => (\n      [...goods].sort((a, b) => a.name.localeCompare(b.name))\n        .slice(0, 5)\n    ));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(({ color }) => color === 'red'));\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const getCallback = async (callBackFunc: () => Promise<Good[]>) => {\n    const goodsFromApi = await callBackFunc();\n\n    return goodsFromApi;\n  };\n\n  const handleGoods = async (promiseFunc: () => Promise<Good[]>) => {\n    try {\n      setHasError(false);\n      setIsLoading(true);\n      const goodsFromApi = await getCallback(promiseFunc);\n\n      setGoods(goodsFromApi);\n    } catch (error) {\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => handleGoods(getAll)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => handleGoods(get5First)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => handleGoods(getRedGoods)}\n      >\n        Load red goods\n      </button>\n\n      {isLoading\n        ? (\n          <svg viewBox=\"25 25 50 50\">\n            <circle r=\"20\" cy=\"50\" cx=\"50\" />\n          </svg>\n        )\n        : <GoodsList goods={goods} hasError={hasError} />}\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}