{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","components/Loader.tsx","index.tsx"],"names":["GoodsList","goods","map","name","id","color","style","getAll","fetch","then","response","json","GoodsType","get5First","sort","a","b","localeCompare","slice","getRedGoods","filter","Loader","viewBox","r","cy","cx","App","useState","setGoods","isLoading","setIsLoading","hasError","setHasError","Default","currentGoodsType","setCurrentGoodsType","handleGoods","promiseFunc","goodsType","goodsFromApi","className","type","onClick","All","disabled","FirstFive","OnlyRed","ReactDOM","render","document","getElementById"],"mappings":"qPAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,mCACE,6BACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAIC,EAAb,EAAaA,MAAb,OACT,oBAEE,UAAQ,OACRC,MAAO,CAAED,SAHX,SAKGF,GAJIC,W,OCPR,SAASG,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,ICFFC,EDEQC,EAAY,WACvB,OAAON,IACJE,MAAK,SAAAR,GAAK,OACT,YAAIA,GAAOa,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEZ,KAAKc,cAAcD,EAAEb,SAC9Ce,MAAM,EAAG,OAILC,EAAc,WACzB,OAAOZ,IACJE,MAAK,SAAAR,GAAK,OAAIA,EAAMmB,QAAO,kBAAyB,QAAzB,EAAGf,aEpBtBgB,EAAS,kBACpB,qBAAKC,QAAQ,cAAb,SACE,wBAAQC,EAAE,KAAKC,GAAG,KAAKC,GAAG,W,SDMzBb,K,WAAAA,E,UAAAA,E,sBAAAA,E,mBAAAA,M,KAOE,IAAMc,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAO1B,EAAP,KAAc2B,EAAd,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,EAAgDL,mBAASf,EAAUqB,SAAnE,mBAAOC,EAAP,KAAyBC,EAAzB,KAEMC,EAAW,uCAAG,WAClBC,GADkB,6BAAAtB,EAAA,6DAElBuB,EAFkB,+BAEN1B,EAAUqB,QAFJ,SAKhBD,GAAY,GACZF,GAAa,GANG,SAOWO,IAPX,OAOVE,EAPU,OAShBJ,EAAoBG,GACpBV,EAASW,GAVO,kDAYhBP,GAAY,GAZI,yBAchBF,GAAa,GAdG,6EAAH,sDAkBjB,OACE,sBAAKU,UAAU,MAAf,UACE,uDAECX,EAEG,cAAC,EAAD,IAGA,qCACE,wBACEY,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMN,EAAY7B,EAAQK,EAAU+B,MAC7CC,SAAUV,IAAqBtB,EAAU+B,IAJ3C,4BASA,wBACEF,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMN,EAAYvB,EAAWD,EAAUiC,YAChDD,SAAUV,IAAqBtB,EAAUiC,UAJ3C,gCASA,wBACEJ,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMN,EAAYjB,EAAaP,EAAUkC,UAClDF,SAAUV,IAAqBtB,EAAUkC,QAJ3C,4BAQEf,EACG,6DACA,cAAC,EAAD,CAAW9B,MAAOA,WE1EnC8C,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0ef4f31f.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <>\n    <ul>\n      {goods.map(({ name, id, color }) => (\n        <li\n          key={id}\n          data-cy=\"good\"\n          style={{ color }}\n        >\n          {name}\n        </li>\n      ))}\n    </ul>\n  </>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => (\n      [...goods].sort((a, b) => a.name.localeCompare(b.name))\n        .slice(0, 5)\n    ));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(({ color }) => color === 'red'));\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Loader } from './components/Loader';\n\nenum GoodsType {\n  Default = '',\n  All = 'all',\n  FirstFive = 'firstFive',\n  OnlyRed = 'onlyRed',\n}\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [currentGoodsType, setCurrentGoodsType] = useState(GoodsType.Default);\n\n  const handleGoods = async (\n    promiseFunc: () => Promise<Good[]>,\n    goodsType = GoodsType.Default,\n  ) => {\n    try {\n      setHasError(false);\n      setIsLoading(true);\n      const goodsFromApi = await promiseFunc();\n\n      setCurrentGoodsType(goodsType);\n      setGoods(goodsFromApi);\n    } catch (error) {\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      {isLoading\n        ? (\n          <Loader />\n        )\n        : (\n          <>\n            <button\n              type=\"button\"\n              data-cy=\"all-button\"\n              onClick={() => handleGoods(getAll, GoodsType.All)}\n              disabled={currentGoodsType === GoodsType.All}\n            >\n              Load all goods\n            </button>\n\n            <button\n              type=\"button\"\n              data-cy=\"first-five-button\"\n              onClick={() => handleGoods(get5First, GoodsType.FirstFive)}\n              disabled={currentGoodsType === GoodsType.FirstFive}\n            >\n              Load 5 first goods\n            </button>\n\n            <button\n              type=\"button\"\n              data-cy=\"red-button\"\n              onClick={() => handleGoods(getRedGoods, GoodsType.OnlyRed)}\n              disabled={currentGoodsType === GoodsType.OnlyRed}\n            >\n              Load red goods\n            </button>\n            { hasError\n              ? (<p>Error, server is unavailable</p>)\n              : (<GoodsList goods={goods} />)}\n          </>\n        )}\n\n    </div>\n  );\n};\n","export const Loader = () => (\n  <svg viewBox=\"25 25 50 50\">\n    <circle r=\"20\" cy=\"50\" cx=\"50\" />\n  </svg>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}